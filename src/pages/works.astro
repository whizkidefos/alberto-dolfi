---
import Layout from "../layouts/Layout.astro";
import PageHeader from "../components/ui/PageHeader.astro";
import Section from "../components/ui/Section.astro";
import WorkCard from "../components/works/WorkCard.astro";
import { works, type WorkCategory } from "../data/works";

const categories: { id: WorkCategory | 'all'; label: string }[] = [
  { id: "all", label: "All Works" },
  { id: "orchestral", label: "Orchestral" },
  { id: "chamber", label: "Chamber" },
  { id: "piano", label: "Piano" },
  { id: "vocal", label: "Vocal" },
];
---

<Layout title="Works | Alberto Dolfi">
  <PageHeader
    title="Works"
    subtitle="Explore my musical compositions across different genres"
  />

  <Section>
    <div x-data="{ activeTab: 'all', modalOpen: false, modalScore: null }">
      <!-- Pill Navigation -->
      <div class="mb-12 flex justify-center">
        <nav class="inline-flex rounded-lg bg-gray-100 p-1 dark:bg-gray-800" aria-label="Tabs">
          {
            categories.map(({ id, label }) => (
              <button
                type="button"
                class="min-w-[120px] rounded-lg px-4 py-2.5 text-sm font-medium transition-all duration-200"
                @click={`activeTab = '${id}'`}
                :class={`{
                  'bg-white text-gray-900 shadow-md dark:bg-gray-900 dark:text-white': activeTab === '${id}',
                  'text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200': activeTab !== '${id}'
                }`}
              >
                {label}
              </button>
            ))
          }
        </nav>
      </div>

      <!-- Works Grid -->
      <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
        {works.map((work) => (
          <div x-show={`activeTab === 'all' || activeTab === '${work.category}'`}>
            <WorkCard
              title={work.title}
              year={work.year}
              duration={work.duration}
              description={work.description}
              premiere={work.premiere}
              scoreUrl={work.scoreUrl}
              audioUrl={work.audioUrl}
              image={work.image}
            />
          </div>
        ))}
      </div>

      <!-- Score Modal -->
      <div
        x-show="modalOpen"
        style="display: none"
        x-transition:enter="transition ease-out duration-300"
        x-transition:enter-start="opacity-0"
        x-transition:enter-end="opacity-100"
        x-transition:leave="transition ease-in duration-200"
        x-transition:leave-start="opacity-100"
        x-transition:leave-end="opacity-0"
        class="fixed inset-0 z-50 flex items-center justify-center bg-black/50 p-4"
        @click.self="modalOpen = false"
        @keydown.escape.window="modalOpen = false"
      >
        <div 
          class="relative max-h-[90vh] w-full max-w-4xl rounded-lg bg-white p-1 shadow-xl dark:bg-gray-900"
          x-transition:enter="transition ease-out duration-300"
          x-transition:enter-start="opacity-0 transform scale-95"
          x-transition:enter-end="opacity-100 transform scale-100"
          @click.outside="modalOpen = false"
        >
          <!-- Close button -->
          <button
            @click="modalOpen = false"
            class="absolute -right-4 -top-4 rounded-full bg-white p-2 text-gray-500 shadow-md hover:text-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:hover:text-gray-200"
          >
            <span class="sr-only">Close</span>
            <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>

          <!-- PDF Viewer -->
          <iframe
            :src="modalScore"
            class="h-[80vh] w-full rounded-lg"
            type="application/pdf"
          ></iframe>
        </div>
      </div>
    </div>
  </Section>
</Layout>

<script>
  // Initialize Alpine.js
  document.addEventListener('astro:page-load', () => {
    const app = document.querySelector('[x-data]');
    if (app) {
      // @ts-ignore
      window.Alpine?.initTree?.(app);
    }
  });
</script>
